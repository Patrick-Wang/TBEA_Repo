<components>
 <service id="servExecCostModelCollectionXh" transaction="transactionManager">
  <sql id="xhxx">select 
	row_number() over(order by (select 0)) AS ROWNUM,
	convert(varchar(200), sd.model) md
from
	JYGK_SDDB_WIN_BIDDING_ORDER_DETAILS zb,
	JYGK_SDDB_ORDER_EXECUTION_DETAILS sd
where
	sd.code = zb.code and
	sd.company_name in ${dwmcs}
	</sql>
  <list id="ids" type="int" sql="xhxx" value="0"/>
  <list id="values" type="string" sql="xhxx" value="1"/>
 </service>
 <service id="servExecCostModelCollection" transaction="transactionManager">
  <sql id="zbddhz" order="dwmcs" by="0" colcount="18">select 
	convert(varchar(200), sd.company_name) cn,
	sum(sd.not_tax_inclusive_price) ntip1,
	sum(win_bid_gross_profit_amount) wbgpa2,
	sum(win_bid_gross_profit_amount) / nullif(sum(sd.not_tax_inclusive_price),0) mll3,
	sum(win_bid_silicon_steel_price * win_bid_silicon_steel_amount) / nullif(sum(win_bid_silicon_steel_amount), 0) wbssp4,
	sum(win_bid_silicon_steel_amount) wbssa5,
	sum(win_bid_ele_copper_price * win_bid_ele_copper_amount) / nullif(sum(win_bid_ele_copper_amount), 0) wbiop8,
	sum(win_bid_ele_copper_amount) wbioa9,
	sum(win_bid_insulating_oil_price * win_bid_insulating_oil_amount) / nullif(sum(win_bid_insulating_oil_amount), 0) wwbrsp10,
	sum(win_bid_insulating_oil_amount) wbrsa11,
	sum(win_bid_cardboard_price * win_bid_cardboard_amount) / nullif(sum(win_bid_cardboard_amount), 0) wbcp12,
	sum(win_bid_cardboard_amount) wbca13,
	sum(win_bid_rolled_steel_price * win_bid_rolled_steel_amount) / nullif(sum(win_bid_rolled_steel_amount), 0) wbcp14,
	sum(win_bid_rolled_steel_amount) wbca15,
	sum(labour_cost) wbca16,
	sum(manufacturing_cost) wbca17,
	sum(win_bid_other_material_cost) womc18,
	sum(win_bid_material_total) wbmt19

from
	JYGK_SDDB_WIN_BIDDING_ORDER_DETAILS zb,
	JYGK_SDDB_ORDER_EXECUTION_DETAILS sd
where
	sd.code = zb.code and
	sd.company_name in ${dwmcs} and sd.model = ${product_model}
group by
	sd.company_name</sql>
  <sql id="zbddhzhj">select 
	'合计',
	sum(sd.not_tax_inclusive_price) ntip1,
	sum(win_bid_gross_profit_amount) wbgpa2,
	sum(win_bid_gross_profit_amount) / nullif(sum(sd.not_tax_inclusive_price),0) mll3,
	sum(win_bid_silicon_steel_price * win_bid_silicon_steel_amount) / nullif(sum(win_bid_silicon_steel_amount), 0) wbssp4,
	sum(win_bid_silicon_steel_amount) wbssa5,
	sum(win_bid_ele_copper_price * win_bid_ele_copper_amount) / nullif(sum(win_bid_ele_copper_amount), 0) wbiop8,
	sum(win_bid_ele_copper_amount) wbioa9,
	sum(win_bid_insulating_oil_price * win_bid_insulating_oil_amount) / nullif(sum(win_bid_insulating_oil_amount), 0) wwbrsp10,
	sum(win_bid_insulating_oil_amount) wbrsa11,
	sum(win_bid_cardboard_price * win_bid_cardboard_amount) / nullif(sum(win_bid_cardboard_amount), 0) wbcp12,
	sum(win_bid_cardboard_amount) wbca13,
	sum(win_bid_rolled_steel_price * win_bid_rolled_steel_amount) / nullif(sum(win_bid_rolled_steel_amount), 0) wbcp14,
	sum(win_bid_rolled_steel_amount) wbca15,
	sum(labour_cost) wbca16,
	sum(manufacturing_cost) wbca17,
	sum(win_bid_other_material_cost) womc18,
	sum(win_bid_material_total) wbmt19
from
	JYGK_SDDB_WIN_BIDDING_ORDER_DETAILS zb,
	JYGK_SDDB_ORDER_EXECUTION_DETAILS sd
where
	sd.code = zb.code and
	sd.company_name in ${dwmcs} and sd.model = ${product_model}</sql>
  <list id="zbddhz" type="object">
   <item concat="zbddhzhj"/>
  </list>
  <sql id="zxddhzsd" order="dwmcs" by="0" colcount="18">select 
	convert(varchar(200), sd.company_name) cn,
	sum(sd.not_tax_inclusive_price) ntip1,
	sum(op_gross_profit_amount) ogpa2,
	sum(op_gross_profit_amount) / nullif(sum(sd.not_tax_inclusive_price),0) mll3,
	sum(op_unit_price_of_silicon_steel) wbssp4,
	sum(op_quantity_of_silicon_steel) wbssa5,
	sum(op_copper_price * op_amount_of_copper) / nullif(sum(op_amount_of_copper), 0) wbiop8,
	sum(op_amount_of_copper) wbioa9,
	sum(op_unit_price_of_transformer_oil * op_transformer_oil_consumption) / nullif(sum(op_transformer_oil_consumption), 0) wwbrsp10,
	sum(op_transformer_oil_consumption) wbrsa11,
	sum(op_cardboard_unit_price * op_amount_of_cardboard) / nullif(sum(op_amount_of_cardboard), 0) wbcp12,
	sum(op_amount_of_cardboard) wbca13,
	sum(op_steel_price * op_steel_dosage) / nullif(sum(op_steel_dosage), 0) wbcp14,
	sum(op_steel_dosage) wbca15,
	sum(op_labor_cost) womc16,
	sum(op_production_costs) wbmt17,
	sum(op_other_materials) womc18,
	sum(op_total_tax_material) wbmt19
from
	JYGK_SDDB_WIN_BIDDING_ORDER_DETAILS zb,
	JYGK_SDDB_ORDER_EXECUTION_DETAILS sd
where
	sd.code = zb.code and
	sd.company_name in ${dwmcs} and sd.model = ${product_model}
group by
	sd.company_name</sql>
  <sql id="zxddhzsdhj">select 
	'合计',
	sum(sd.not_tax_inclusive_price) ntip1,
	sum(op_gross_profit_amount) ogpa2,
	sum(op_gross_profit_amount) / nullif(sum(sd.not_tax_inclusive_price),0) mll3,
	sum(op_unit_price_of_silicon_steel) wbssp4,
	sum(op_quantity_of_silicon_steel) wbssa5,
	sum(op_copper_price * op_amount_of_copper) / nullif(sum(op_amount_of_copper), 0) wbiop8,
	sum(op_amount_of_copper) wbioa9,
	sum(op_unit_price_of_transformer_oil * op_transformer_oil_consumption) / nullif(sum(op_transformer_oil_consumption), 0) wwbrsp10,
	sum(op_transformer_oil_consumption) wbrsa11,
	sum(op_cardboard_unit_price * op_amount_of_cardboard) / nullif(sum(op_amount_of_cardboard), 0) wbcp12,
	sum(op_amount_of_cardboard) wbca13,
	sum(op_steel_price * op_steel_dosage) / nullif(sum(op_steel_dosage), 0) wbcp14,
	sum(op_steel_dosage) wbca15,
	sum(op_labor_cost) womc16,
	sum(op_production_costs) wbmt17,
	sum(op_other_materials) womc18,
	sum(op_total_tax_material) wbmt19
from
	JYGK_SDDB_WIN_BIDDING_ORDER_DETAILS zb,
	JYGK_SDDB_ORDER_EXECUTION_DETAILS sd
where
	sd.code = zb.code and
	sd.company_name in ${dwmcs} and sd.model = ${product_model}</sql>
  <list id="zxddhzsd" type="object">
   <item concat="zxddhzsdhj"/>
  </list>
  <list id="zxddhz_all" type="object"/>
  <list id="companyname" type="string"/>
  <list id="jds" type="string"/>
  <list id="dwmcs" type="string">
   <item>合计</item>
  </list>
  <list id="htjes" type="double"/>
  <list id="tmpVal" type="double">
   <item/>
   <item/>
  </list>
  <loop var="i" from="${0}" to="${zbddhz.size - 1}">
   <list id="zxddhz_all" type="object">
    <item>${zbddhz[i]}</item>
    <item>${zxddhzsd[i]}</item>
   </list>
   <list id="jds" type="string">
    <item>中标阶段</item>
    <item>锁定阶段</item>
   </list>
   <list id="companyname" type="object">
    <item>${dwmcs[i]}</item>
    <item>${dwmcs[i]}</item>
   </list>
   <list id="tmpVal" type="double">
    <item index="0">${zbddhz[i][1]}</item>
    <item index="1">${zxddhzsd[i][1]}</item>
   </list>
   <list id="htjes" type="object">
    <item>${zbddhz[i][1]}</item>
    <item>${zxddhzsd[i][1]}</item>
   </list>
  </loop>
  <list id="ids" type="int">
   <item from="${0}" to="${companyname.size - 1}"/>
  </list>
  <context key="counter" value="${counterFactory.newCounter.reset[1]}"/>
  <table id="result" rowIds="ids" export="true">
   <col list="companyname"/>
   <col list="htjes"/>
   <col list="jds"/>
   <list type="double" sql="zxddhz_all" value="${counter.next.val}"/>
   <list type="double" sql="zxddhz_all" value="${counter.next.val}"/>
   <list type="double" sql="zxddhz_all" value="${counter.next.val}"/>
   <list type="double" sql="zxddhz_all" value="${counter.next.val}"/>
   <list type="double" sql="zxddhz_all" value="${counter.next.val}"/>
   <list type="double" sql="zxddhz_all" value="${counter.next.val}"/>
   <list type="double" sql="zxddhz_all" value="${counter.next.val}"/>
   <list type="double" sql="zxddhz_all" value="${counter.next.val}"/>
   <list type="double" sql="zxddhz_all" value="${counter.next.val}"/>
   <list type="double" sql="zxddhz_all" value="${counter.next.val}"/>
   <list type="double" sql="zxddhz_all" value="${counter.next.val}"/>
   <list type="double" sql="zxddhz_all" value="${counter.next.val}"/>
   <list type="double" sql="zxddhz_all" value="${counter.next.val}"/>
   <list type="double" sql="zxddhz_all" value="${counter.next.val}"/>
   <list type="double" sql="zxddhz_all" value="${counter.next.val}"/>
   <list type="double" sql="zxddhz_all" value="${counter.next.val}"/>
  </table>
 </service>
 <controller id="execCostModelCollectionFmtter">
  <formatter id="dataFmt" export="true">
   <EmptyFormatter>
    <DefaultMatcher cols="0,2"/>
   </EmptyFormatter>
   <PercentFormatter reservedCount="1">
    <DefaultMatcher cols="4"/>
   </PercentFormatter>
   <NumberFormatter reservedCount="1"/>
  </formatter>
 </controller>
 <controller id="execCostModelCollectionParams">
  <context key="product_model" value="${request.model.asString}"/>
  <context key="compIds" value="${authIds[61]}"/>
  <context key="dwmcs" value="${orgs.virtualCYOrg.namesByIds[compIds]}"/>
 </controller>
 <controller id="execCostModelCollectionUpdate">
  <callcontroller id="execCostModelCollectionParams"/>
  <callservice id="servExecCostModelCollection"/>
  <callcontroller id="execCostModelCollectionFmtter"/>
  <formatterServer id="fmtServExecCostModelCollection" table="${result.matrixNoIds}">
   <formatter ref="dataFmt"/>
  </formatterServer>
  <response type="json">
   <header type="array">
    <item>
     <name>单位名称</name>
    </item>
    <item>
     <name>合同金额</name>
    </item>
    <item>
     <name>项目阶段</name>
    </item>
    <item>
     <name>毛利额</name>
    </item>
    <item>
     <name>毛利率</name>
    </item>
    <item>
     <name>硅钢</name>
     <sub type="array">
      <item>
       <name>单价</name>
      </item>
      <item>
       <name>用量</name>
      </item>
     </sub>
    </item>
    <item>
     <name>电解铜</name>
     <sub type="array">
      <item>
       <name>单价</name>
      </item>
      <item>
       <name>用量</name>
      </item>
     </sub>
    </item>
    <item>
     <name>变压器油</name>
     <sub type="array">
      <item>
       <name>单价</name>
      </item>
      <item>
       <name>用量</name>
      </item>
     </sub>
    </item>
    <item>
     <name>纸板</name>
     <sub type="array">
      <item>
       <name>单价</name>
      </item>
      <item>
       <name>用量</name>
      </item>
     </sub>
    </item>
    <item>
     <name>钢材</name>
     <sub type="array">
      <item>
       <name>单价</name>
      </item>
      <item>
       <name>用量</name>
      </item>
     </sub>
    </item>
    <item>
     <name>其他材料成本</name>
    </item>
    <item>
     <name>人工费用</name>
    </item>
    <item>
     <name>制造费用</name>
    </item>
    <item>
     <name>材料成本总计</name>
    </item>
   </header>
   <mergeRows type="array">
    <item>
     <col>0</col>
    </item>
    <item>
     <col>1</col>
     <rowStart>0</rowStart>
     <step>2</step>
     <count>${result.ids.size / 2}</count>
    </item>
   </mergeRows>
   <mergeTitle>true</mergeTitle>
   <data>${fmtServExecCostModelCollection.result}</data>
  </response>
 </controller>
 <controller id="execCostModelCollectionExport">
  <callcontroller id="execCostModelCollectionParams"/>
  <callservice id="servExecCostModelCollection"/>
  <callcontroller id="execCostModelCollectionFmtter"/>
  <ExcelTemplate id="excelTemplate" sheet="执行阶段订单汇总表"/>
  <list id="title1" type="string">交货时间,合同金额,项目阶段,毛利额,毛利率,硅钢,硅钢,电解铜,电解铜,变压器油,变压器油,纸板,纸板,钢材,钢材,其他材料成本,人工费用,制造费用,材料成本总计</list>
  <list id="title2" type="string">交货时间,合同金额,项目阶段,毛利额,毛利率,单价,用量,单价,用量,单价,用量,,单价,用量,单价,用量,其他材料成本,人工费用,制造费用,材料成本总计</list>
  <formatter id="excel">
   <ExcelTitleFilter>
    <ExcelTemplate ref="excelTemplate"/>
    <Offset row="0" col="0"/>
    <titles>
     <title ref="title1"/>
     <title ref="title2"/>
    </titles>
   </ExcelTitleFilter>
   <ExcelMergeFormatter>
    <ExcelTemplate ref="excelTemplate"/>
    <MergeRegion x="0" y="2" width="1" height="${result.ids.size}"/>
    <MergeRegion x="0" y="0" width="${title1.size}" height="2"/>
    <MergeRegion x="1" y="2" width="1" height="2" yCount="2"/>
   </ExcelMergeFormatter>
   <ExcelHeaderCenterFormatter>
    <DefaultMatcher cols="0"/>
    <ExcelTemplate ref="excelTemplate"/>
    <Offset row="2" col="0"/>
   </ExcelHeaderCenterFormatter>
   <ExcelOffsetFormatter>
    <ExcelTemplate ref="excelTemplate"/>
    <Offset row="2" col="0"/>
   </ExcelOffsetFormatter>
  </formatter>
  <formatterServer id="servFmt" table="${result.matrixNoIds}">
   <formatter ref="dataFmt"/>
   <formatter ref="excel"/>
  </formatterServer>
  <response type="excel" ref="excelTemplate" name="执行阶段订单成本汇总表.xls" serv="servFmt"/>
 </controller>
 <controller id="execCostModelCollection">
 <context key="compIds" value="${authIds[61]}"/>
 <context key="dwmcs" value="${orgs.virtualCYOrg.namesByIds[compIds]}"/>
  <callservice id="servExecCostModelCollectionXh" inline="true"/>
  <response type="jsp" name="sddb/sddb">
   <map key="updateUrl" value="execCostModelCollectionUpdate"/>
   <map key="exportUrl" value="execCostModelCollectionExport"/>
   <map key="itemNodes" value="${dataNodeFactory[ids][values].asJson}"/>
   <map key="title" value="执行阶段订单成本汇总表(按型号)"/>
   <map key="itemLabel" value="产品型号:"/>
  </response>
 </controller> 
</components>
