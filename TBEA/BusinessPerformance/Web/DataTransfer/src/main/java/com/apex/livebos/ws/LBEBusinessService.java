
package com.apex.livebos.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "LBEBusinessService", targetNamespace = "http://ws.livebos.apex.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface LBEBusinessService {


    /**
     * 
     * @param instanceId
     * @param sessionId
     * @return
     *     returns com.apex.livebos.ws.AvailableWorkActionResponse
     */
    @WebMethod
    @WebResult(name = "AvailableWorkActionResponse", targetNamespace = "")
    @RequestWrapper(localName = "getWorkAvailableAction", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.GetWorkAvailableAction")
    @ResponseWrapper(localName = "getWorkAvailableActionResponse", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.GetWorkAvailableActionResponse")
    public AvailableWorkActionResponse getWorkAvailableAction(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId,
        @WebParam(name = "instanceId", targetNamespace = "")
        long instanceId);

    /**
     * 
     * @param caller
     * @param queryOption
     * @param sessionId
     * @return
     *     returns com.apex.livebos.ws.QueryResult
     */
    @WebMethod
    @WebResult(name = "QueryResult", targetNamespace = "")
    @RequestWrapper(localName = "queryTasks", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.QueryTasks")
    @ResponseWrapper(localName = "queryTasksResponse", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.QueryTasksResponse")
    public QueryResult queryTasks(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId,
        @WebParam(name = "caller", targetNamespace = "")
        String caller,
        @WebParam(name = "queryOption", targetNamespace = "")
        QueryOption queryOption);

    /**
     * 
     * @param uid
     * @param startupOnly
     * @param sessionId
     * @return
     *     returns com.apex.livebos.ws.WorkflowDescribeResponse
     */
    @WebMethod
    @WebResult(name = "UserInfo", targetNamespace = "")
    @RequestWrapper(localName = "queryWorkflowDescribe", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.QueryWorkflowDescribe")
    @ResponseWrapper(localName = "queryWorkflowDescribeResponse", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.QueryWorkflowDescribeResponse")
    public WorkflowDescribeResponse queryWorkflowDescribe(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId,
        @WebParam(name = "uid", targetNamespace = "")
        String uid,
        @WebParam(name = "startupOnly", targetNamespace = "")
        boolean startupOnly);

    /**
     * 
     * @param instanceId
     * @param stepId
     * @param sessionId
     * @return
     *     returns com.apex.livebos.ws.WorkOwnerResponse
     */
    @WebMethod
    @WebResult(name = "WorkOwnerResponse", targetNamespace = "")
    @RequestWrapper(localName = "getWorkOwner", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.GetWorkOwner")
    @ResponseWrapper(localName = "getWorkOwnerResponse", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.GetWorkOwnerResponse")
    public WorkOwnerResponse getWorkOwner(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId,
        @WebParam(name = "instanceId", targetNamespace = "")
        long instanceId,
        @WebParam(name = "stepId", targetNamespace = "")
        int stepId);

    /**
     * 
     * @param summary
     * @param caller
     * @param objectName
     * @param actionId
     * @param sessionId
     * @param id
     * @param params
     * @return
     *     returns com.apex.livebos.ws.WorkActionResult
     */
    @WebMethod
    @WebResult(name = "WorkActionResult", targetNamespace = "")
    @RequestWrapper(localName = "doWorkActionByObject", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.DoWorkActionByObject")
    @ResponseWrapper(localName = "doWorkActionByObjectResponse", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.DoWorkActionByObjectResponse")
    public WorkActionResult doWorkActionByObject(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId,
        @WebParam(name = "objectName", targetNamespace = "")
        String objectName,
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "actionId", targetNamespace = "")
        int actionId,
        @WebParam(name = "params", targetNamespace = "")
        List<LbParameter> params,
        @WebParam(name = "caller", targetNamespace = "")
        String caller,
        @WebParam(name = "summary", targetNamespace = "")
        String summary);

    /**
     * 
     * @param loginId
     * @param sessionId
     * @return
     *     returns com.apex.livebos.ws.UserInfo
     */
    @WebMethod
    @WebResult(name = "UserInfo", targetNamespace = "")
    @RequestWrapper(localName = "getUserInfo", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.GetUserInfo")
    @ResponseWrapper(localName = "getUserInfoResponse", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.GetUserInfoResponse")
    public UserInfo getUserInfo(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId,
        @WebParam(name = "loginId", targetNamespace = "")
        String loginId);

    /**
     * 
     * @param objectName
     * @param sessionId
     * @param params
     * @return
     *     returns com.apex.livebos.ws.CreateResult
     */
    @WebMethod
    @WebResult(name = "CreateResult", targetNamespace = "")
    @RequestWrapper(localName = "create", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.Create")
    @ResponseWrapper(localName = "createResponse", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.CreateResponse")
    public CreateResult create(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId,
        @WebParam(name = "objectName", targetNamespace = "")
        String objectName,
        @WebParam(name = "params", targetNamespace = "")
        List<LbParameter> params);

    /**
     * 
     * @param objectName
     * @param sessionId
     * @param id
     * @return
     *     returns com.apex.livebos.ws.LbeResult
     */
    @WebMethod
    @WebResult(name = "LBEResult", targetNamespace = "")
    @RequestWrapper(localName = "delete", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.DeleteResponse")
    public LbeResult delete(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId,
        @WebParam(name = "objectName", targetNamespace = "")
        String objectName,
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param summary
     * @param caller
     * @param instanceId
     * @param actionId
     * @param workflowName
     * @param sessionId
     * @param params
     * @return
     *     returns com.apex.livebos.ws.WorkActionResult
     */
    @WebMethod
    @WebResult(name = "WorkActionResult", targetNamespace = "")
    @RequestWrapper(localName = "doWorkAction", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.DoWorkAction")
    @ResponseWrapper(localName = "doWorkActionResponse", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.DoWorkActionResponse")
    public WorkActionResult doWorkAction(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId,
        @WebParam(name = "workflowName", targetNamespace = "")
        String workflowName,
        @WebParam(name = "instanceId", targetNamespace = "")
        long instanceId,
        @WebParam(name = "actionId", targetNamespace = "")
        int actionId,
        @WebParam(name = "params", targetNamespace = "")
        List<LbParameter> params,
        @WebParam(name = "caller", targetNamespace = "")
        String caller,
        @WebParam(name = "summary", targetNamespace = "")
        String summary);

    /**
     * 
     * @param password
     * @param scheme
     * @param securityCode
     * @param userid
     * @param algorithm
     * @return
     *     returns com.apex.livebos.ws.LoginResult
     */
    @WebMethod
    @WebResult(name = "LoginResult", targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.LoginResponse")
    public LoginResult login(
        @WebParam(name = "userid", targetNamespace = "")
        String userid,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "scheme", targetNamespace = "")
        String scheme,
        @WebParam(name = "algorithm", targetNamespace = "")
        String algorithm,
        @WebParam(name = "securityCode", targetNamespace = "")
        String securityCode);

    /**
     * 
     * @param password
     * @param securityCode
     * @param sessionId
     * @param userId
     * @param algorithm
     * @return
     *     returns com.apex.livebos.ws.QueryResult
     */
    @WebMethod
    @WebResult(name = "UserInfo", targetNamespace = "")
    @RequestWrapper(localName = "validateUser", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.ValidateUser")
    @ResponseWrapper(localName = "validateUserResponse", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.ValidateUserResponse")
    public QueryResult validateUser(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId,
        @WebParam(name = "userId", targetNamespace = "")
        String userId,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "algorithm", targetNamespace = "")
        String algorithm,
        @WebParam(name = "securityCode", targetNamespace = "")
        String securityCode);

    /**
     * 
     * @param caller
     * @param condition
     * @param queryOption
     * @param sessionId
     * @return
     *     returns com.apex.livebos.ws.QueryResult
     */
    @WebMethod
    @WebResult(name = "QueryResult", targetNamespace = "")
    @RequestWrapper(localName = "queryTaskListByCondition", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.QueryTaskListByCondition")
    @ResponseWrapper(localName = "queryTaskListByConditionResponse", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.QueryTaskListByConditionResponse")
    public QueryResult queryTaskListByCondition(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId,
        @WebParam(name = "caller", targetNamespace = "")
        String caller,
        @WebParam(name = "condition", targetNamespace = "")
        WorkCondition condition,
        @WebParam(name = "queryOption", targetNamespace = "")
        QueryOption queryOption);

    /**
     * 
     * @param condition
     * @param queryOption
     * @param objectName
     * @param sessionId
     * @param params
     * @return
     *     returns com.apex.livebos.ws.QueryResult
     */
    @WebMethod
    @WebResult(name = "QueryResult", targetNamespace = "")
    @RequestWrapper(localName = "query", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.Query")
    @ResponseWrapper(localName = "queryResponse", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.QueryResponse")
    public QueryResult query(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId,
        @WebParam(name = "objectName", targetNamespace = "")
        String objectName,
        @WebParam(name = "params", targetNamespace = "")
        List<LbParameter> params,
        @WebParam(name = "condition", targetNamespace = "")
        String condition,
        @WebParam(name = "queryOption", targetNamespace = "")
        QueryOption queryOption);

    /**
     * 
     * @param objectName
     * @param sessionId
     * @param id
     * @param params
     * @return
     *     returns com.apex.livebos.ws.LbeResult
     */
    @WebMethod
    @WebResult(name = "LBEResult", targetNamespace = "")
    @RequestWrapper(localName = "update", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.Update")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.UpdateResponse")
    public LbeResult update(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId,
        @WebParam(name = "objectName", targetNamespace = "")
        String objectName,
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "params", targetNamespace = "")
        List<LbParameter> params);

    /**
     * 
     * @param bizProcessName
     * @param variables
     * @param sessionId
     * @param id
     * @param params
     * @return
     *     returns com.apex.livebos.ws.BizProcessResult
     */
    @WebMethod
    @WebResult(name = "BizProcessResult", targetNamespace = "")
    @RequestWrapper(localName = "execBizProcess", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.ExecBizProcess")
    @ResponseWrapper(localName = "execBizProcessResponse", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.ExecBizProcessResponse")
    public BizProcessResult execBizProcess(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId,
        @WebParam(name = "bizProcessName", targetNamespace = "")
        String bizProcessName,
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "params", targetNamespace = "")
        List<LbParameter> params,
        @WebParam(name = "variables", targetNamespace = "")
        List<LbParameter> variables);

    /**
     * 
     * @param sessionId
     * @return
     *     returns com.apex.livebos.ws.LogoutResult
     */
    @WebMethod
    @WebResult(name = "LogoutResult", targetNamespace = "")
    @RequestWrapper(localName = "logout", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.Logout")
    @ResponseWrapper(localName = "logoutResponse", targetNamespace = "http://ws.livebos.apex.com/", className = "com.apex.livebos.ws.LogoutResponse")
    public LogoutResult logout(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId);

}
